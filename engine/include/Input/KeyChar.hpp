//
//
//

#ifndef AEYON3D_KEYCODE_HPP
#define AEYON3D_KEYCODE_HPP

#include <cstdint>
#include "KeyCode.hpp"

namespace aeyon
{
	static constexpr std::uint32_t ScancodeToCharcode(KeyCode scancode)
	{
		return static_cast<std::uint32_t>(scancode) | (1U << 30U);
	}

	enum class KeyChar : std::uint32_t
	{
		Unknown = 0,

		Return = '\r',
		Escape = '\033',
		Backspace = '\b',
		Tab = '\t',
		Space = ' ',
		Exclaim = '!',
		DoubleQuote = '"',
		Hash = '#',
		Percent = '%',
		Dollar = '$',
		Ampersand = '&',
		Quote = '\'',
		LeftParen = '(',
		RightParen = ')',
		Asterisk = '*',
		Plus = '+',
		Comma = ',',
		Minus = '-',
		Period = '.',
		Slash = '/',
		Alpha0 = '0',
		Alpha1 = '1',
		Alpha2 = '2',
		Alpha3 = '3',
		Alpha4 = '4',
		Alpha5 = '5',
		Alpha6 = '6',
		Alpha7 = '7',
		Alpha8 = '8',
		Alpha9 = '9',
		Colon = ':',
		Semicolon = ';',
		Less = '<',
		Equals = '=',
		Greater = '>',
		Question = '?',
		At = '@',
		LeftBracket = '[',
		Backslash = '\\',
		RightBracket = ']',
		Caret = '^',
		Underscore = '_',
		Backquote = '`',
		A = 'a',
		B = 'b',
		C = 'c',
		D = 'd',
		E = 'e',
		F = 'f',
		G = 'g',
		H = 'h',
		I = 'i',
		J = 'j',
		K = 'k',
		L = 'l',
		M = 'm',
		N = 'n',
		O = 'o',
		P = 'p',
		Q = 'q',
		R = 'r',
		S = 's',
		T = 't',
		U = 'u',
		V = 'v',
		W = 'w',
		X = 'x',
		Y = 'y',
		Z = 'z',

		CapsLock = ScancodeToCharcode(KeyCode::CapsLock),

		F1 = ScancodeToCharcode(KeyCode::F1),
		F2 = ScancodeToCharcode(KeyCode::F2),
		F3 = ScancodeToCharcode(KeyCode::F3),
		F4 = ScancodeToCharcode(KeyCode::F4),
		F5 = ScancodeToCharcode(KeyCode::F5),
		F6 = ScancodeToCharcode(KeyCode::F6),
		F7 = ScancodeToCharcode(KeyCode::F7),
		F8 = ScancodeToCharcode(KeyCode::F8),
		F9 = ScancodeToCharcode(KeyCode::F9),
		F10 = ScancodeToCharcode(KeyCode::F10),
		F11 = ScancodeToCharcode(KeyCode::F11),
		F12 = ScancodeToCharcode(KeyCode::F12),

		PrintScreen = ScancodeToCharcode(KeyCode::PrintScreen),
		ScrollLock = ScancodeToCharcode(KeyCode::ScrollLock),
		Pause = ScancodeToCharcode(KeyCode::Pause),
		Insert = ScancodeToCharcode(KeyCode::Insert),
		Home = ScancodeToCharcode(KeyCode::Home),
		PageUp = ScancodeToCharcode(KeyCode::PageUp),
		Delete = '\177',
		End = ScancodeToCharcode(KeyCode::End),
		PageDown = ScancodeToCharcode(KeyCode::PageDown),
		Right = ScancodeToCharcode(KeyCode::Right),
		Left = ScancodeToCharcode(KeyCode::Left),
		Down = ScancodeToCharcode(KeyCode::Down),
		Up = ScancodeToCharcode(KeyCode::Up),

		NumLockClear = ScancodeToCharcode(KeyCode::NumLockClear),
		KeypadDivide = ScancodeToCharcode(KeyCode::KeypadDivide),
		KeypadMultiply = ScancodeToCharcode(KeyCode::KeypadMultiply),
		KeypadMinus = ScancodeToCharcode(KeyCode::KeypadMinus),
		KeypadPlus = ScancodeToCharcode(KeyCode::KeypadPlus),
		KeypadEnter = ScancodeToCharcode(KeyCode::KeypadEnter),
		Keypad1 = ScancodeToCharcode(KeyCode::Keypad1),
		Keypad2 = ScancodeToCharcode(KeyCode::Keypad2),
		Keypad3 = ScancodeToCharcode(KeyCode::Keypad3),
		Keypad4 = ScancodeToCharcode(KeyCode::Keypad4),
		Keypad5 = ScancodeToCharcode(KeyCode::Keypad5),
		Keypad6 = ScancodeToCharcode(KeyCode::Keypad6),
		Keypad7 = ScancodeToCharcode(KeyCode::Keypad7),
		Keypad8 = ScancodeToCharcode(KeyCode::Keypad8),
		Keypad9 = ScancodeToCharcode(KeyCode::Keypad9),
		Keypad0 = ScancodeToCharcode(KeyCode::Keypad0),
		KeypadPeriod = ScancodeToCharcode(KeyCode::KeypadPeriod),

		Application = ScancodeToCharcode(KeyCode::Application),
		Power = ScancodeToCharcode(KeyCode::Power),
		KeypadEquals = ScancodeToCharcode(KeyCode::KeypadEquals),
		F13 = ScancodeToCharcode(KeyCode::F13),
		F14 = ScancodeToCharcode(KeyCode::F14),
		F15 = ScancodeToCharcode(KeyCode::F15),
		F16 = ScancodeToCharcode(KeyCode::F16),
		F17 = ScancodeToCharcode(KeyCode::F17),
		F18 = ScancodeToCharcode(KeyCode::F18),
		F19 = ScancodeToCharcode(KeyCode::F19),
		F20 = ScancodeToCharcode(KeyCode::F20),
		F21 = ScancodeToCharcode(KeyCode::F21),
		F22 = ScancodeToCharcode(KeyCode::F22),
		F23 = ScancodeToCharcode(KeyCode::F23),
		F24 = ScancodeToCharcode(KeyCode::F24),
		Execute = ScancodeToCharcode(KeyCode::Execute),
		Help = ScancodeToCharcode(KeyCode::Help),
		Menu = ScancodeToCharcode(KeyCode::Menu),
		Select = ScancodeToCharcode(KeyCode::Select),
		Stop = ScancodeToCharcode(KeyCode::Stop),
		Again = ScancodeToCharcode(KeyCode::Again),
		Undo = ScancodeToCharcode(KeyCode::Undo),
		Cut = ScancodeToCharcode(KeyCode::Cut),
		Copy = ScancodeToCharcode(KeyCode::Copy),
		Paste = ScancodeToCharcode(KeyCode::Paste),
		Find = ScancodeToCharcode(KeyCode::Find),
		Mute = ScancodeToCharcode(KeyCode::Mute),
		VolumeUp = ScancodeToCharcode(KeyCode::VolumeUp),
		VolumeDown = ScancodeToCharcode(KeyCode::VolumeDown),
		KeypadComma = ScancodeToCharcode(KeyCode::KeypadComma),
		KeypadEqualsAS400 = ScancodeToCharcode(KeyCode::KeypadEqualsAS400),

		AltErase = ScancodeToCharcode(KeyCode::AltErase),
		SysReq = ScancodeToCharcode(KeyCode::SysReq),
		Cancel = ScancodeToCharcode(KeyCode::Cancel),
		Clear = ScancodeToCharcode(KeyCode::Clear),
		Prior = ScancodeToCharcode(KeyCode::Prior),
		Return2 = ScancodeToCharcode(KeyCode::Return2),
		Separator = ScancodeToCharcode(KeyCode::Separator),
		Out = ScancodeToCharcode(KeyCode::Out),
		Oper = ScancodeToCharcode(KeyCode::Oper),
		ClearAgain = ScancodeToCharcode(KeyCode::ClearAgain),
		CRSel = ScancodeToCharcode(KeyCode::CRSel),
		EXSel = ScancodeToCharcode(KeyCode::EXSel),

		Keypad00 = ScancodeToCharcode(KeyCode::Keypad00),
		Keypad000 = ScancodeToCharcode(KeyCode::Keypad000),
		ThousandsSeparator = ScancodeToCharcode(KeyCode::ThousandsSeparator),
		DecimalSeparator = ScancodeToCharcode(KeyCode::DecimalSeparator),
		CurrencyUnit = ScancodeToCharcode(KeyCode::CurrencyUnit),
		CurrencySubUnit = ScancodeToCharcode(KeyCode::CurrencySubUnit),
		KeypadLeftParen = ScancodeToCharcode(KeyCode::KeypadLeftParen),
		KeypadRightParen = ScancodeToCharcode(KeyCode::KeypadRightParen),
		KeypadLeftBrace = ScancodeToCharcode(KeyCode::KeypadLeftBrace),
		KeypadRightBrace = ScancodeToCharcode(KeyCode::KeypadRightBrace),
		KeypadTab = ScancodeToCharcode(KeyCode::KeypadTab),
		KeypadBackspace = ScancodeToCharcode(KeyCode::KeypadBackspace),
		KeypadA = ScancodeToCharcode(KeyCode::KeypadA),
		KeypadB = ScancodeToCharcode(KeyCode::KeypadB),
		KeypadC = ScancodeToCharcode(KeyCode::KeypadC),
		KeypadD = ScancodeToCharcode(KeyCode::KeypadD),
		KeypadE = ScancodeToCharcode(KeyCode::KeypadE),
		KeypadF = ScancodeToCharcode(KeyCode::KeypadF),
		KeypadXOR = ScancodeToCharcode(KeyCode::KeypadXOR),
		KeypadPower = ScancodeToCharcode(KeyCode::KeypadPower),
		KeypadPercent = ScancodeToCharcode(KeyCode::KeypadPercent),
		KeypadLess = ScancodeToCharcode(KeyCode::KeypadLess),
		KeypadGreater = ScancodeToCharcode(KeyCode::KeypadGreater),
		KeypadAmpersand = ScancodeToCharcode(KeyCode::KeypadAmpersand),
		KeypadDoubleAmpersand = ScancodeToCharcode(KeyCode::KeypadDoubleAmpersand),
		KeypadVerticalBar = ScancodeToCharcode(KeyCode::KeypadVerticalBar),
		KeypadDoubleVerticalBar = ScancodeToCharcode(KeyCode::KeypadDoubleVerticalBar),
		KeypadColon = ScancodeToCharcode(KeyCode::KeypadColon),
		KeypadHash = ScancodeToCharcode(KeyCode::KeypadHash),
		KeypadSpace = ScancodeToCharcode(KeyCode::KeypadSpace),
		KeypadAt = ScancodeToCharcode(KeyCode::KeypadAt),
		KeypadExclaim = ScancodeToCharcode(KeyCode::KeypadExclaim),
		KeypadMemStore = ScancodeToCharcode(KeyCode::KeypadMemStore),
		KeypadMemRecall = ScancodeToCharcode(KeyCode::KeypadMemRecall),
		KeypadMemClear = ScancodeToCharcode(KeyCode::KeypadMemClear),
		KeypadMemAdd = ScancodeToCharcode(KeyCode::KeypadMemAdd),
		KeypadMemSubtract = ScancodeToCharcode(KeyCode::KeypadMemSubtract),
		KeypadMemMultiply = ScancodeToCharcode(KeyCode::KeypadMemMultiply),
		KeypadMemDivide = ScancodeToCharcode(KeyCode::KeypadMemDivide),
		KeypadPlusMinus = ScancodeToCharcode(KeyCode::KeypadPlusMinus),
		KeypadClear = ScancodeToCharcode(KeyCode::KeypadClear),
		KeypadClearEntry = ScancodeToCharcode(KeyCode::KeypadClearEntry),
		KeypadBinary = ScancodeToCharcode(KeyCode::KeypadBinary),
		KeypadOctal = ScancodeToCharcode(KeyCode::KeypadOctal),
		KeypadDecimal = ScancodeToCharcode(KeyCode::KeypadDecimal),
		KeypadHexadecimal = ScancodeToCharcode(KeyCode::KeypadHexadecimal),

		LeftControl = ScancodeToCharcode(KeyCode::LeftControl),
		LeftShift = ScancodeToCharcode(KeyCode::LeftShift),
		LeftAlt = ScancodeToCharcode(KeyCode::LeftAlt),
		LeftGUI = ScancodeToCharcode(KeyCode::LeftGUI),
		RightControl = ScancodeToCharcode(KeyCode::RightControl),
		RightShift = ScancodeToCharcode(KeyCode::RightShift),
		RightAlt = ScancodeToCharcode(KeyCode::RightAlt),
		RightGUI = ScancodeToCharcode(KeyCode::RightGUI)
	};
}

#endif //AEYON3D_KEYCODE_HPP
